(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{1075:function(e,r,t){"use strict";var o=t(1076);Object.defineProperty(r,"__esModule",{value:!0}),r.default=function(e){return d.apply(this,arguments)};var n=o(t(1077)),c=o(t(1078));function d(){return(d=(0,c.default)(n.default.mark((function e(r){var t,o;return n.default.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return t=document.createElement("video"),o=new Promise((function(e,r){t.addEventListener("loadedmetadata",(function(){t.duration===1/0?(t.currentTime=Number.MAX_SAFE_INTEGER,t.ontimeupdate=function(){t.ontimeupdate=null,e(t.duration),t.currentTime=0}):e(t.duration)})),t.onerror=function(e){return r(e.target.error)}})),t.src="string"==typeof r||r instanceof String?r:window.URL.createObjectURL(r),e.abrupt("return",o);case 4:case"end":return e.stop()}}),e)})))).apply(this,arguments)}},1076:function(e,r){e.exports=function(e){return e&&e.__esModule?e:{default:e}}},1077:function(e,r,t){e.exports=t(17)},1078:function(e,r){function t(e,r,t,o,n,c,d){try{var l=e[c](d),R=l.value}catch(e){return void t(e)}l.done?r(R):Promise.resolve(R).then(o,n)}e.exports=function(e){return function(){var r=this,o=arguments;return new Promise((function(n,c){var d=e.apply(r,o);function l(e){t(d,n,c,l,R,"next",e)}function R(e){t(d,n,c,l,R,"throw",e)}l(void 0)}))}}},1195:function(e,r,t){"use strict";t.r(r),t.d(r,"VoiceRecorderWeb",(function(){return f}));var o=t(60),n=t(1075),c=t.n(n);const d=()=>new Error("FAILED_TO_RECORD"),l=()=>new Error("RECORDING_HAS_NOT_STARTED"),R=()=>new Error("FAILED_TO_FETCH_RECORDING"),h=["audio/aac","audio/webm;codecs=opus","audio/mp4","audio/webm","audio/ogg;codecs=opus"],m=()=>new Promise((()=>{}));class v{constructor(){this.mediaRecorder=null,this.chunks=[],this.pendingResult=m()}static async canDeviceVoiceRecord(){var e;return null==(null===(e=null===navigator||void 0===navigator?void 0:navigator.mediaDevices)||void 0===e?void 0:e.getUserMedia)||null==v.getSupportedMimeType()?{value:!1}:{value:!0}}async startRecording(){if(null!=this.mediaRecorder)throw new Error("ALREADY_RECORDING");if(!(await v.canDeviceVoiceRecord()).value)throw new Error("DEVICE_CANNOT_VOICE_RECORD");if(!(await v.hasAudioRecordingPermission().catch((()=>({value:!0})))).value)throw new Error("MISSING_PERMISSION");return navigator.mediaDevices.getUserMedia({audio:!0}).then(this.onSuccessfullyStartedRecording.bind(this)).catch(this.onFailedToStartRecording.bind(this)),{value:!0}}async stopRecording(){if(null==this.mediaRecorder)throw l();try{return this.mediaRecorder.stop(),this.mediaRecorder.stream.getTracks().forEach((track=>track.stop())),this.pendingResult}catch(e){throw R()}finally{this.prepareInstanceForNextOperation()}}static async hasAudioRecordingPermission(){return navigator.permissions.query({name:"microphone"}).then((e=>({value:"granted"===e.state}))).catch((()=>{throw new Error("COULD_NOT_QUERY_PERMISSION_STATUS")}))}static async requestAudioRecordingPermission(){return(await v.hasAudioRecordingPermission().catch((()=>({value:!1})))).value?{value:!0}:navigator.mediaDevices.getUserMedia({audio:!0}).then((()=>({value:!0}))).catch((()=>({value:!1})))}pauseRecording(){if(null==this.mediaRecorder)throw l();return"recording"===this.mediaRecorder.state?(this.mediaRecorder.pause(),Promise.resolve({value:!0})):Promise.resolve({value:!1})}resumeRecording(){if(null==this.mediaRecorder)throw l();return"paused"===this.mediaRecorder.state?(this.mediaRecorder.resume(),Promise.resolve({value:!0})):Promise.resolve({value:!1})}getCurrentStatus(){return null==this.mediaRecorder?Promise.resolve({status:"NONE"}):"recording"===this.mediaRecorder.state?Promise.resolve({status:"RECORDING"}):"paused"===this.mediaRecorder.state?Promise.resolve({status:"PAUSED"}):Promise.resolve({status:"NONE"})}static getSupportedMimeType(){if(null==(null===MediaRecorder||void 0===MediaRecorder?void 0:MediaRecorder.isTypeSupported))return null;const e=h.find((e=>MediaRecorder.isTypeSupported(e)));return null!=e?e:null}onSuccessfullyStartedRecording(e){this.pendingResult=new Promise(((r,t)=>{this.mediaRecorder=new MediaRecorder(e),this.mediaRecorder.onerror=()=>{t(d()),this.prepareInstanceForNextOperation()},this.mediaRecorder.onstop=async()=>{const e=v.getSupportedMimeType();if(null==e)t(R());else{const t=new Blob(this.chunks,{type:e}),o=await v.blobToBase64(t),n=await c()(t);this.prepareInstanceForNextOperation(),r({value:{recordDataBase64:o,mimeType:e,msDuration:1e3*n}})}},this.mediaRecorder.ondataavailable=e=>this.chunks.push(e.data),this.mediaRecorder.start()}))}onFailedToStartRecording(){throw this.prepareInstanceForNextOperation(),d()}static blobToBase64(e){return new Promise((r=>{const t=new FileReader;t.onloadend=()=>{const e=String(t.result),o=e.split("base64,"),n=o.length>1?o[1]:e;r(n.trim())},t.readAsDataURL(e)}))}prepareInstanceForNextOperation(){if(null!=this.mediaRecorder&&"recording"===this.mediaRecorder.state)try{this.mediaRecorder.stop()}catch(e){}this.pendingResult=m(),this.mediaRecorder=null,this.chunks=[]}}class f extends o.b{constructor(){super(...arguments),this.voiceRecorderInstance=new v}canDeviceVoiceRecord(){return v.canDeviceVoiceRecord()}hasAudioRecordingPermission(){return v.hasAudioRecordingPermission()}requestAudioRecordingPermission(){return v.requestAudioRecordingPermission()}startRecording(){return this.voiceRecorderInstance.startRecording()}stopRecording(){return this.voiceRecorderInstance.stopRecording()}pauseRecording(){return this.voiceRecorderInstance.pauseRecording()}resumeRecording(){return this.voiceRecorderInstance.resumeRecording()}getCurrentStatus(){return this.voiceRecorderInstance.getCurrentStatus()}}}}]);